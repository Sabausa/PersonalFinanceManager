// <auto-generated />
using System;
using Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Front.Server.Migrations
{
    [DbContext(typeof(PersonalFinanceManagerDbContext))]
    partial class PersonalFinanceManagerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Models.UserModels.Expenditure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentExpenseMonthId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrentExpenseMonthId");

                    b.ToTable("Expenditure");
                });

            modelBuilder.Entity("Data.Models.UserModels.ExpenseMonth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ExpenditureId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ExpenditureId");

                    b.ToTable("ExpenseMonth");
                });

            modelBuilder.Entity("Data.Models.UserModels.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentIncomeMonthId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrentIncomeMonthId");

                    b.ToTable("Income");
                });

            modelBuilder.Entity("Data.Models.UserModels.IncomeMonth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IncomeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IncomeId");

                    b.ToTable("IncomeMonth");
                });

            modelBuilder.Entity("Data.Models.UserModels.ListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int?>("ExpenseMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("IncomeMonthId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseMonthId");

                    b.HasIndex("IncomeMonthId");

                    b.ToTable("ListItem");
                });

            modelBuilder.Entity("Data.Models.UserModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExpenditureId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("IncomeId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("ExpenditureId");

                    b.HasIndex("IncomeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Data.Models.UserModels.Expenditure", b =>
                {
                    b.HasOne("Data.Models.UserModels.ExpenseMonth", "CurrentExpenseMonth")
                        .WithMany()
                        .HasForeignKey("CurrentExpenseMonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentExpenseMonth");
                });

            modelBuilder.Entity("Data.Models.UserModels.ExpenseMonth", b =>
                {
                    b.HasOne("Data.Models.UserModels.Expenditure", null)
                        .WithMany("History")
                        .HasForeignKey("ExpenditureId");
                });

            modelBuilder.Entity("Data.Models.UserModels.Income", b =>
                {
                    b.HasOne("Data.Models.UserModels.IncomeMonth", "CurrentIncomeMonth")
                        .WithMany()
                        .HasForeignKey("CurrentIncomeMonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentIncomeMonth");
                });

            modelBuilder.Entity("Data.Models.UserModels.IncomeMonth", b =>
                {
                    b.HasOne("Data.Models.UserModels.Income", null)
                        .WithMany("History")
                        .HasForeignKey("IncomeId");
                });

            modelBuilder.Entity("Data.Models.UserModels.ListItem", b =>
                {
                    b.HasOne("Data.Models.UserModels.ExpenseMonth", null)
                        .WithMany("ExpenseList")
                        .HasForeignKey("ExpenseMonthId");

                    b.HasOne("Data.Models.UserModels.IncomeMonth", null)
                        .WithMany("IncomeList")
                        .HasForeignKey("IncomeMonthId");
                });

            modelBuilder.Entity("Data.Models.UserModels.User", b =>
                {
                    b.HasOne("Data.Models.UserModels.Expenditure", "Expenditure")
                        .WithMany()
                        .HasForeignKey("ExpenditureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.UserModels.Income", "Income")
                        .WithMany()
                        .HasForeignKey("IncomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Expenditure");

                    b.Navigation("Income");
                });

            modelBuilder.Entity("Data.Models.UserModels.Expenditure", b =>
                {
                    b.Navigation("History");
                });

            modelBuilder.Entity("Data.Models.UserModels.ExpenseMonth", b =>
                {
                    b.Navigation("ExpenseList");
                });

            modelBuilder.Entity("Data.Models.UserModels.Income", b =>
                {
                    b.Navigation("History");
                });

            modelBuilder.Entity("Data.Models.UserModels.IncomeMonth", b =>
                {
                    b.Navigation("IncomeList");
                });
#pragma warning restore 612, 618
        }
    }
}
